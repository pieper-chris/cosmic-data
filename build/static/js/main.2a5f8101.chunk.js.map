{"version":3,"sources":["components/globe_map.js","components/header.js","components/footer.js","components/toggle_msg.js","components/neo.js","components/neo_collapsible_header.js","components/launch_image.js","components/spacex_launch.js","components/spacex.js","components/apod.js","components/apod_collapsible_header.js","App.js","serviceWorker.js","index.js"],"names":["Map","props","globeEl","useRef","useState","window","innerWidth","width","setWidth","innerHeight","height","setHeight","updateArea","useEffect","addEventListener","controls","current","autoRotate","autoRotateSpeed","maxDistance","enabled","enablePointerInteraction","removeEventListener","className","ref","globeImageUrl","Header","Footer","href","target","rel","ToggleMsg","Neo","name","danger","h_abs_mag","km_diameter","miles_diameter","link","close_app_date","String","NeoCollapsibleHeader","neos","setNEOs","toggle","setToggle","neo_modal_ref","getNEOs","a","process","fetch","URLSearchParams","api_key","response","json","data","near_earth_objects","toggle_change","onClick","e","map","neo","key","id","absolute_magnitude_h","estimated_diameter","kilometers","miles","is_potentially_hazardous_asteroid","nasa_jpl_url","LaunchImage","img","src","alt","SpaceXLaunch","date_time_UTC","success","details","webcast","article","images","crypto","getRandomValues","Uint32Array","SpaceXCollapsibleHeader","launch","setLaunch","spaceX_modal_ref","getLaunch","date_utc","links","flickr","original","Apod","copyright","date","explanation","media_type","img_url","ApodCollapsibleHeader","apod","setApod","url_type","setUrl","setMediaType","apod_modal_ref","getApod","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","day","hd","url","hdurl","title","App","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2a5f8101.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Globe from 'react-globe.gl';\nimport './App.css';\n\nfunction Map (props) {\n  const globeEl = useRef();\n  const [width, setWidth]   = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight/1.2);\n  const updateArea = () => {\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight/1.2);\n}\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateArea);\n    const controls = globeEl.current.controls();\n    controls.autoRotate=true;\n    controls.autoRotateSpeed=\"1.0\";\n    controls.maxDistance=\"280.0\";\n    controls.enabled = false;\n    globeEl.current.enablePointerInteraction = false;\n    globeEl.current.width=600;\n    globeEl.current.height=500;\n    return () => window.removeEventListener(\"resize\", updateArea);\n  }, []);\n\n return (\n    <>\n    <div className=\"GlobeMap\">\n      <Globe\n      ref={globeEl}\n      globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-night.jpg\"\n      width={width}\n      height={height}\n      />\n      </div>\n    </>\n );\n}\n\nexport default Map\n","import React from \"react\";\nimport './App.css';\n\nfunction Header (props) {\n return (\n     <div className=\"header\">\n        <h1> Cosmic Data </h1>\n     </div>\n );\n}\n\nexport default Header;\n","import React from \"react\";\nimport './App.css';\n\nfunction Footer (props) {\n return (\n     <div className=\"footer\">\n        {/*Open links in new tabs*/}\n        <p>SpaceX Data provided by <a href=\"https://github.com/r-spacex/SpaceX-API\"\n            target=\"_blank\" rel=\"noopener noreferrer\" >SpaceX-API</a></p>\n        <p>Nasa Data provided by <a href=\"https://api.nasa.gov/\"\n            target=\"_blank\" rel=\"noopener noreferrer\" >NASA API</a></p>\n        <p> <a href=\"https://github.com/pieper-chris/cosmic-data\"\n            target=\"_blank\" rel=\"noopener noreferrer\" >Github</a></p>\n     </div>\n );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport './App.css';\n\nfunction ToggleMsg (props) {\n return (\n     <div className=\"toggle_msg\">\n        <p> Click any element to toggle </p>\n     </div>\n );\n}\n\nexport default ToggleMsg;\n","import React from \"react\";\nimport './links.css'\nimport './App.css';\n\nfunction Neo({\n  name,\n  danger,\n  h_abs_mag,\n  km_diameter,\n  miles_diameter,\n  close_app_date,\n  link\n  }) {\n  return(\n    <div className=\"Neo\">\n      <h1> Name:  <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" > {name} </a>\n      </h1>\n      <p> H (absolute magnitude): {String(h_abs_mag)} </p>\n      <p> Diameter (km): {String(km_diameter['estimated_diameter_min'])}\n          - {String(km_diameter['estimated_diameter_max'])} </p>\n      <p>  Diameter (miles): {String(miles_diameter['estimated_diameter_min'])}\n          - {String(miles_diameter['estimated_diameter_max'])} </p>\n      <p> Potentially Dangerous?: {String(danger)} </p>\n    </div>\n  );\n}\n\nexport default Neo;\n","import React, {useEffect, useRef, useState} from \"react\";\nimport Neo from './neo.js';\nimport './App.css';\n\n\nfunction NeoCollapsibleHeader () {\n  const [neos, setNEOs] = useState([]);\n  const [toggle, setToggle] = useState(false);\n\n  const neo_modal_ref = useRef();\n\n  useEffect(() => {\n    getNEOs();\n  }, []);\n\n  const getNEOs = async () => {\n    const react_app_api_key = process.env.REACT_APP_API_KEY;\n\n    const response = await fetch('https://api.nasa.gov/neo/rest/v1/neo/browse?'\n      + new URLSearchParams({\n        api_key: react_app_api_key,\n      }));\n    const data = await response.json();\n    setNEOs(data.near_earth_objects);\n  };\n\n  const toggle_change = () => {\n    setToggle(!toggle);\n  };\n\n  /* Allow user to click out of modal by clicking\n     on the background outside of the modal */\n  const closeNeoModal = e => {\n    if(neo_modal_ref.current === e.target){\n      setToggle(!toggle);\n    }\n  }\n\n  return (\n    <div>\n      <p onClick={e => toggle_change()} className=\"toggle_list\">\n        Current Near-Earth Object (Asteroids) list\n      </p>\n      {toggle?(\n        <div>\n          <div className=\"modal_background\"\n              ref={neo_modal_ref} onClick={closeNeoModal}>\n            <p className=\"modal_button\"\n            onClick={e => toggle_change()}>-</p>\n            <div className=\"neo_list_modal\">\n                {neos.map(neo => (\n                  <Neo\n                  key={neo.id}\n                  name={neo.name}\n                  h_abs_mag={neo.absolute_magnitude_h}\n                  km_diameter={neo.estimated_diameter.kilometers}\n                  miles_diameter={neo.estimated_diameter.miles}\n                  danger={neo.is_potentially_hazardous_asteroid}\n                  link={neo.nasa_jpl_url}\n                  />\n                ))}\n            </div>\n          </div>\n      </div>): null}\n   </div>\n  );\n}\n\nexport default NeoCollapsibleHeader;\n","import React from \"react\";\nimport './App.css';\n\nfunction LaunchImage({\n  img\n  }) {\n  return(\n    <div className=\"launch_image\">\n      <img id=\"apod_image\" src={img}\n        alt=\" Currently unavailable :( please try again later!\" />\n    </div>\n  );\n}\n\nexport default LaunchImage;\n","import React from \"react\";\nimport LaunchImage from './launch_image.js'\nimport './links.css'\nimport './App.css';\n\nfunction SpaceXLaunch({\nname,\ndate_time_UTC,\nsuccess,\ndetails,\nwebcast,\narticle,\nimages\n}){\n  return(\n    <div className=\"spacexLaunch\">\n      <div className=\"spacexLaunchSub1\">\n        <h1> Launch Title:  {name} </h1>\n        <u> Details </u>\n        <p> {details} </p>\n        <p> Date/Time (UTC):  {date_time_UTC} </p>\n        <p> Successful?: {String(success)} </p>\n        <table className=\"spacexLinks\">\n          <tbody>\n            <tr>\n              <td>\n                <p> <a href={webcast} target=\"_blank\" rel=\"noopener noreferrer\" > Webcast </a>\n                </p>\n              </td>\n              <td>\n                <p> <a href={article} target=\"_blank\" rel=\"noopener noreferrer\" > Article </a>\n                </p>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <u> Images of launch </u>\n      {images.map(img => (\n        <LaunchImage\n        key={window.crypto.getRandomValues(new Uint32Array(1))}\n        img={img}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default SpaceXLaunch;\n","import React, {useEffect, useRef, useState} from \"react\";\n/*import Apod from './spacex_launch.js';*/\nimport SpaceXLaunch from './spacex_launch.js'\nimport './App.css';\n\n\nfunction SpaceXCollapsibleHeader () {\n  const [launch, setLaunch] = useState([]);\n  const [toggle, setToggle] = useState(false);\n\n  const spaceX_modal_ref = useRef();\n\n  useEffect(() => {\n    getLaunch();\n  }, []);\n\n  const getLaunch = async () => {\n\n    /*fetch most recent launch*/\n    const response = await fetch('https://api.spacexdata.com/v4/launches/latest');\n    const data = await response.json();\n    setLaunch(data);\n  };\n\n\n  const toggle_change = () => {\n    setToggle(!toggle);\n  };\n\n  /* Allow user to click out of modal by clicking\n     on the background outside of the modal */\n  const spacexModal = e => {\n    if(spaceX_modal_ref.current === e.target){\n      setToggle(!toggle);\n    }\n  }\n\n  return (\n    <div>\n      <p onClick={e => toggle_change()} className=\"toggle_list\">\n        SpaceX Latest Launch\n      </p>\n      {toggle?(\n        <div>\n          <div className=\"modal_background\"\n              ref={spaceX_modal_ref} onClick={spacexModal}>\n            <p className=\"modal_button\"\n              onClick={e => toggle_change()}>-</p>\n              <div className=\"spacex_modal\">\n                <SpaceXLaunch\n                  name={launch.name}\n                  date_time_UTC={launch.date_utc}\n                  success={launch.success}\n                  details={launch.details}\n                  webcast={launch.links.webcast}\n                  article={launch.links.article}\n                  images={launch.links.flickr.original}\n                />\n              </div>\n          </div>\n      </div>): null}\n   </div>\n  );\n}\n\nexport default SpaceXCollapsibleHeader;\n","import React from \"react\";\nimport './links.css'\nimport './App.css';\n\nfunction Apod({\nname,\ndate,\ncopyright,\nexplanation,\nmedia_type,\nimg_url,\n}){\n  return(\n    <div className=\"apod\">\n      <h1> Title:  {name} </h1>\n      <p> Copyright:  {copyright} </p>\n      <u> Description </u>\n      <p> {explanation} </p>\n      {(media_type ===\"video\")?\n        <p className=\"video_msg\"> Occasionally, NASA's APOD API sends a youtube video for the\n            \"Astronomy Picture of the Day\". Today is one of those days.\n            You can view the video  <a href={img_url} target=\"_blank\" rel=\"noopener noreferrer\" >here. </a>\n            Apologies for the inconveniece;\n            hopefully tomorrow a nice big image will be shown here! </p>\n        : <img id=\"apod_image\" src={img_url}\n            alt=\"APOD currently unavailable :( please try again later!\" /> }\n\n    </div>\n  );\n}\n\nexport default Apod;\n","import React, {useRef, useEffect, useState} from \"react\";\nimport Apod from './apod.js';\nimport './App.css';\n\n\nfunction ApodCollapsibleHeader () {\n  const [apod, setApod] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  const [url_type, setUrl] = useState([]);\n  const [media_type, setMediaType] = useState();\n\n  const apod_modal_ref = useRef();\n\n  useEffect(() => {\n    getApod();\n  }, []);\n\n  const getApod = async () => {\n    /*get the set environment variable api key*/\n    const react_app_api_key = process.env.REACT_APP_API_KEY;\n    /* Get day in YYYY-MM-DD format for fetch*/\n    const today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth()+1;\n    var yyyy = today.getFullYear();\n    if(dd<10) {dd='0'+dd;};\n    if(mm<10) { mm='0'+mm};\n    /*Using yesterday's date until after 12-27 apod*/\n    var day = yyyy+'-'+mm+'-'+(dd-1);\n    /*fetch today's apod using our api key and date*/\n    const response = await fetch('https://api.nasa.gov/planetary/apod?'\n      + new URLSearchParams({\n        date: day,\n        hd: true,\n        api_key: react_app_api_key,\n      }));\n    const data = await response.json();\n    setApod(data);\n    setMediaType(data.media_type);\n    setUrl(((data.media_type) === \"video\")? data.url : data.hdurl);\n  };\n\n  const toggle_change = () => {\n    setToggle(!toggle);\n  };\n\n  /* Allow user to click out of modal by clicking\n     on the background outside of the modal */\n  const closeApodModal = e => {\n    if(apod_modal_ref.current === e.target){\n      setToggle(!toggle);\n    }\n  }\n\n  return (\n    <div>\n      <p onClick={e => toggle_change()} className=\"toggle_list\">\n        NASA Astronomy Picture of the Day\n      </p>\n      {toggle?(\n        <div className=\"modal_background\"\n            ref={apod_modal_ref} onClick={closeApodModal}>\n            <p className=\"modal_button\"\n                onClick={e => toggle_change()}>-</p>\n            <Apod\n            name={apod.title}\n            copyright={apod.copyright}\n            explanation={apod.explanation}\n            media_type={media_type}\n            img_url={url_type}\n            />\n        </div>\n    ): null}\n   </div>\n  );\n}\n\nexport default ApodCollapsibleHeader;\n","import React, { Component } from 'react';\nimport Map from './components/globe_map.js';\nimport Header from './components/header.js';\nimport Footer from './components/footer.js';\nimport ToggleMsg from './components/toggle_msg.js'\nimport NeoCollapsibleHeader from './components/neo_collapsible_header';\nimport SpaceXCollapsibleHeader from './components/spacex';\nimport ApodCollapsibleHeader from './components/apod_collapsible_header';\nimport './components/App.css';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <>\n      <div className=\"App\">\n        <Map/>\n        {/* Adding layers for react \"modals\"*/}\n        <div className=\"uiBackground\">\n          <Header />\n          <ToggleMsg />\n          <div className=\"controlPanelBackground\">\n            <ApodCollapsibleHeader />\n            <SpaceXCollapsibleHeader />\n            <NeoCollapsibleHeader />\n          </div>\n          <Footer />\n        </div>\n      </div>\n      </>\n  );\n }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}