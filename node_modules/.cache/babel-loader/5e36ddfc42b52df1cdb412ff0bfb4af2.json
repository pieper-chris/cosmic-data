{"ast":null,"code":"var _jsxFileName = \"/Users/christopherpieper/Desktop/flight_count/src/globe_map.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport Globe from 'react-globe.gl';\nimport './App.css';\n\nfunction Map(props) {\n  const globeEl = useRef();\n  useEffect(() => {\n    const controls = globeEl.current.controls();\n    controls.autoRotate = true;\n    controls.autoRotateSpeed = \"1.0\";\n    controls.maxDistance = \"280.0\";\n    const renderer = globeEl.current.renderer();\n    const camera = globeEl.current.camera();\n    const canvas = renderer.domElement;\n    const width = canvas.clientWidth;\n    const height = canvas.clientHeight;\n    const needResize = canvas.width !== width || canvas.height !== height;\n\n    if (needResize) {\n      renderer.setSize(width, height, false);\n    }\n\n    if (needResize) {\n      const canvas = renderer.domElement;\n      camera.aspect = canvas.clientWidth / canvas.clientHeight;\n      camera.updateProjectionMatrix();\n    }\n    /*renderer.setSize(\"50%\", \"50%\", true);\n    renderer.setViewport(1,1,1,1);\n    document.body.appendChild( renderer.domElement );*/\n\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"GlobeMap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Globe, {\n    ref: globeEl,\n    globeImageUrl: \"//unpkg.com/three-globe/example/img/earth-night.jpg\",\n    width: \"clientWidth\",\n    height: \"50%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/christopherpieper/Desktop/flight_count/src/globe_map.js"],"names":["React","useEffect","useRef","Globe","Map","props","globeEl","controls","current","autoRotate","autoRotateSpeed","maxDistance","renderer","camera","canvas","domElement","width","clientWidth","height","clientHeight","needResize","setSize","aspect","updateProjectionMatrix"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,CAAcC,KAAd,EAAqB;AACnB,QAAMC,OAAO,GAAGJ,MAAM,EAAtB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,QAAQ,GAAGD,OAAO,CAACE,OAAR,CAAgBD,QAAhB,EAAjB;AACAA,IAAAA,QAAQ,CAACE,UAAT,GAAoB,IAApB;AACAF,IAAAA,QAAQ,CAACG,eAAT,GAAyB,KAAzB;AACAH,IAAAA,QAAQ,CAACI,WAAT,GAAqB,OAArB;AACA,UAAMC,QAAQ,GAAGN,OAAO,CAACE,OAAR,CAAgBI,QAAhB,EAAjB;AACA,UAAMC,MAAM,GAAGP,OAAO,CAACE,OAAR,CAAgBK,MAAhB,EAAf;AACA,UAAMC,MAAM,GAAGF,QAAQ,CAACG,UAAxB;AACA,UAAMC,KAAK,GAAGF,MAAM,CAACG,WAArB;AACA,UAAMC,MAAM,GAAGJ,MAAM,CAACK,YAAtB;AACA,UAAMC,UAAU,GAAGN,MAAM,CAACE,KAAP,KAAiBA,KAAjB,IAA0BF,MAAM,CAACI,MAAP,KAAkBA,MAA/D;;AACA,QAAIE,UAAJ,EAAgB;AACdR,MAAAA,QAAQ,CAACS,OAAT,CAAiBL,KAAjB,EAAwBE,MAAxB,EAAgC,KAAhC;AACD;;AACD,QAAIE,UAAJ,EAAgB;AACd,YAAMN,MAAM,GAAGF,QAAQ,CAACG,UAAxB;AACAF,MAAAA,MAAM,CAACS,MAAP,GAAgBR,MAAM,CAACG,WAAP,GAAqBH,MAAM,CAACK,YAA5C;AACAN,MAAAA,MAAM,CAACU,sBAAP;AACD;AACD;;;;AAGD,GAtBQ,EAsBN,EAtBM,CAAT;AAwBD,sBACG,uDACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AACA,IAAA,GAAG,EAAEjB,OADL;AAEA,IAAA,aAAa,EAAC,qDAFd;AAGA,IAAA,KAAK,EAAC,aAHN;AAIA,IAAA,MAAM,EAAC,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,CADH;AAYA;;AAED,eAAeF,GAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport Globe from 'react-globe.gl';\nimport './App.css';\n\nfunction Map (props) {\n  const globeEl = useRef();\n  useEffect(() => {\n    const controls = globeEl.current.controls();\n    controls.autoRotate=true;\n    controls.autoRotateSpeed=\"1.0\";\n    controls.maxDistance=\"280.0\";\n    const renderer = globeEl.current.renderer();\n    const camera = globeEl.current.camera();\n    const canvas = renderer.domElement;\n    const width = canvas.clientWidth;\n    const height = canvas.clientHeight;\n    const needResize = canvas.width !== width || canvas.height !== height;\n    if (needResize) {\n      renderer.setSize(width, height, false);\n    }\n    if (needResize) {\n      const canvas = renderer.domElement;\n      camera.aspect = canvas.clientWidth / canvas.clientHeight;\n      camera.updateProjectionMatrix();\n    }\n    /*renderer.setSize(\"50%\", \"50%\", true);\n    renderer.setViewport(1,1,1,1);\n    document.body.appendChild( renderer.domElement );*/\n  }, []);\n\n return (\n    <>\n     <div className=\"GlobeMap\">\n      <Globe\n      ref={globeEl}\n      globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-night.jpg\"\n      width=\"clientWidth\"\n      height=\"50%\"\n      />\n      </div>\n    </>\n );\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}