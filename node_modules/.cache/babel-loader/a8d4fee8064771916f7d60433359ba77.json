{"ast":null,"code":"import e, { useRef as t, useEffect as o } from \"react\";\nimport { Tween as n, Easing as a, update as i } from \"es6-tween\";\nimport { PerspectiveCamera as r, TextureLoader as s, MeshLambertMaterial as c, MeshBasicMaterial as u, BackSide as l, Mesh as d, SphereGeometry as m, Color as h, AmbientLight as f, PointLight as p, BoxGeometry as b, Vector3 as k, Group as g, WebGLRenderer as v, Scene as w } from \"three\";\nimport y from \"resize-observer-polyfill\";\nimport { createGlowMesh as M } from \"three-glow-mesh\";\nimport { scaleLinear as x } from \"d3-scale\";\nimport { OrbitControls as C } from \"three/examples/jsm/controls/OrbitControls\";\nimport { Interaction as R } from \"three.interaction\";\nimport E from \"tippy.js\";\nvar S = {\n  onClickMarker: function (e, t, o) {},\n  onDefocus: function (e) {},\n  onGlobeBackgroundTextureLoaded: function () {},\n  onGlobeCloudsTextureLoaded: function () {},\n  onGlobeTextureLoaded: function () {},\n  onMouseOutMarker: function (e, t, o) {},\n  onMouseOverMarker: function (e, t, o) {}\n},\n    F = \"https://raw.githubusercontent.com/chrisrzhou/react-globe/main/textures/background.png\",\n    D = \"https://raw.githubusercontent.com/chrisrzhou/react-globe/main/textures/clouds.png\",\n    G = \"https://raw.githubusercontent.com/chrisrzhou/react-globe/main/textures/globe.jpg\",\n    O = [1.29027, 103.851959],\n    T = {\n  ambientLightColor: \"white\",\n  ambientLightIntensity: .8,\n  cameraAutoRotateSpeed: .1,\n  cameraDistanceRadiusScale: 3,\n  cameraMaxDistanceRadiusScale: 100,\n  cameraMaxPolarAngle: Math.PI,\n  cameraMinPolarAngle: 0,\n  cameraRotateSpeed: .2,\n  cameraZoomSpeed: 1,\n  enableCameraAutoRotate: !0,\n  enableCameraRotate: !0,\n  enableCameraZoom: !0,\n  enableDefocus: !0,\n  enableGlobeGlow: !0,\n  enableMarkerGlow: !0,\n  enableMarkerTooltip: !0,\n  focusAnimationDuration: 1e3,\n  focusDistanceRadiusScale: 1.5,\n  focusEasingFunction: [\"Cubic\", \"Out\"],\n  globeCloudsOpacity: .3,\n  globeGlowCoefficient: .1,\n  globeGlowColor: \"#d1d1d1\",\n  globeGlowPower: 3,\n  globeGlowRadiusScale: .2,\n  markerEnterAnimationDuration: 1e3,\n  markerEnterEasingFunction: [\"Linear\", \"None\"],\n  markerExitAnimationDuration: 500,\n  markerExitEasingFunction: [\"Cubic\", \"Out\"],\n  markerGlowCoefficient: 0,\n  markerGlowPower: 3,\n  markerGlowRadiusScale: 2,\n  markerOffsetRadiusScale: 0,\n  markerRadiusScaleRange: [.005, .02],\n  markerRenderer: null,\n  markerTooltipRenderer: function (e) {\n    return JSON.stringify(e.coordinates);\n  },\n  markerType: \"dot\",\n  pointLightColor: \"white\",\n  pointLightIntensity: 1,\n  pointLightPositionRadiusScales: [-2, 1, -1]\n},\n    L = {\n  enableMarkerGlow: !0,\n  markerRadiusScaleRange: [.005, .02],\n  markerType: \"dot\"\n},\n    A = {\n  enableMarkerGlow: !1,\n  markerRadiusScaleRange: [.2, .5],\n  markerType: \"bar\"\n};\n\nfunction z() {\n  return (z = Object.assign || function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var o = arguments[t];\n\n      for (var n in o) Object.prototype.hasOwnProperty.call(o, n) && (e[n] = o[n]);\n    }\n\n    return e;\n  }).apply(this, arguments);\n}\n\nfunction P(e, t) {\n  var o = e[0] * Math.PI / 180,\n      n = (e[1] - 180) * Math.PI / 180;\n  return [-t * Math.cos(o) * Math.cos(n), t * Math.sin(o), t * Math.cos(o) * Math.sin(n)];\n}\n\nfunction j(e, t) {\n  var o = z({}, t);\n  return Object.keys(o).forEach(function (t) {\n    var n = e[t];\n    o[t] = void 0 === n ? o[t] : n;\n  }), o;\n}\n\nfunction B(e) {\n  var t = e.to,\n      o = e.animationDuration,\n      i = e.easingFunction,\n      r = e.onUpdate,\n      s = e.onEnd,\n      c = void 0 === s ? null : s,\n      u = e.delay,\n      l = void 0 === u ? 0 : u,\n      d = i[0],\n      m = i[1];\n  new n(e.from).to(t, o).easing(a[d][m]).on(\"update\", r).on(\"complete\", c).delay(l).start();\n}\n\nvar I = function () {\n  function e(e) {\n    this.element = e, this.instance = E([e], {\n      animation: \"scale\",\n      arrow: !1\n    })[0];\n  }\n\n  var t = e.prototype;\n  return t.destroy = function () {\n    this.instance.destroy();\n  }, t.hide = function () {\n    document.body.style.cursor = \"inherit\", this.element.style.position = \"fixed\", this.element.style.left = \"0\", this.element.style.top = \"0\", this.instance.hide();\n  }, t.show = function (e, t, o) {\n    document.body.style.cursor = \"pointer\", this.element.style.position = \"fixed\", this.element.style.left = e + 10 + \"px\", this.element.style.top = t + 10 + \"px\", this.instance.setContent(o), this.instance.show();\n  }, e;\n}(),\n    U = function () {\n  function e(e) {\n    var t,\n        o,\n        n,\n        a = e.canvasElement,\n        i = e.initialCameraDistanceRadiusScale,\n        s = void 0 === i ? T.cameraDistanceRadiusScale : i,\n        c = e.initialCoordinates,\n        u = void 0 === c ? O : c,\n        l = e.textures,\n        h = void 0 === l ? {} : l,\n        b = e.tooltipElement;\n    this.callbacks = S, this.focus = null, this.isLocked = !1, this.markers = [], this.options = T, this.textures = h, this.previousFocus = null, this.tooltip = new I(b), this.renderer = new v({\n      alpha: !0,\n      antialias: !0,\n      canvas: a\n    }), this.camera = function (e, t) {\n      var o = new r();\n      o.name = \"camera\", o.far = 3e5, o.fov = 45, o.near = 1;\n      var n = P(e, 300 * t);\n      return o.position.set(n[0], n[1], n[2]), o;\n    }(u, s), this.earth = function () {\n      var e = new d();\n      e.geometry = new m(300, 50, 50), e.name = \"earth\";\n      var t = new d();\n      t.geometry = new m(301, 50, 50), t.name = \"clouds\";\n      var o = new d();\n      return o.name = \"background\", o.geometry = new m(3e4, 50, 50), {\n        clouds: t,\n        globe: e,\n        background: o\n      };\n    }(), this.lights = (t = new f(\"white\"), o = new p(\"white\"), t.name = \"ambientLight\", o.name = \"pointLight\", {\n      ambient: t,\n      point: o\n    }), this.markerObjects = ((n = new g()).name = \"markers\", n), this.orbitControls = new C(this.camera, this.renderer.domElement), this.scene = function (e) {\n      var t = e.camera,\n          o = e.earth,\n          n = e.lights,\n          a = e.markerObjects,\n          i = e.renderer,\n          r = e.defocus,\n          s = new w();\n      return t.add(n.ambient), t.add(n.point), s.add(t), s.add(o.globe), s.add(a), new R(i, s, t), s.on(\"click\", r), s;\n    }({\n      camera: this.camera,\n      earth: this.earth,\n      lights: this.lights,\n      markerObjects: this.markerObjects,\n      renderer: this.renderer,\n      defocus: this.defocus.bind(this)\n    }), this.updateOptions(), this.updateCallbacks(), this.updateMarkers();\n  }\n\n  var t = e.prototype;\n  return t.animate = function () {\n    this.render(), this.animationFrameId = requestAnimationFrame(this.animate.bind(this));\n  }, t.animateClouds = function () {\n    var e = this;\n    [\"x\", \"y\", \"z\"].forEach(function (t) {\n      e.earth.clouds.rotation[t] += Math.random() / 1e4;\n    });\n  }, t.applyAnimations = function (e) {\n    var t = this,\n        o = 0,\n        n = [];\n    return e.forEach(function (a, i) {\n      var r = a.coordinates,\n          s = a.focusAnimationDuration,\n          c = {\n        focusAnimationDuration: s,\n        focusDistanceRadiusScale: a.focusDistanceRadiusScale,\n        focusEasingFunction: a.focusEasingFunction\n      },\n          u = i === e.length - 1,\n          l = setTimeout(function () {\n        t.unlock(), t.updateFocus(r, c, u);\n      }, o);\n      n.push(l), o += s;\n    }), function () {\n      n.forEach(function (e) {\n        clearTimeout(e);\n      });\n    };\n  }, t.defocus = function () {\n    !this.isLocked && this.previousFocus && this.options.enableDefocus && (this.updateFocus(null), this.callbacks.onDefocus(this.previousFocus));\n  }, t.destroy = function () {\n    cancelAnimationFrame(this.animationFrameId), this.tooltip.destroy(), this.renderer.domElement.remove();\n  }, t.lock = function () {\n    this.isLocked = !0, this.orbitControls.enabled = !1, this.orbitControls.autoRotate = !1;\n  }, t.render = function () {\n    this.renderer.sortObjects = !1, this.renderer.render(this.scene, this.camera), this.orbitControls.update(), this.animateClouds(), i();\n  }, t.resize = function (e) {\n    var t = e.height,\n        o = e.width;\n    this.renderer.setSize(o, t), this.camera.aspect = o / t, this.camera.updateProjectionMatrix(), this.render();\n  }, t.saveFocus = function (e) {\n    this.previousFocus = e;\n  }, t.unlock = function () {\n    this.isLocked = !1, this.orbitControls.enabled = !0, this.orbitControls.autoRotate = !0;\n  }, t.updateCallbacks = function (e) {\n    void 0 === e && (e = {}), this.callbacks = j(e, S);\n  }, t.updateFocus = function (e, t, o) {\n    void 0 === t && (t = {}), void 0 === o && (o = !0), this.isLocked || (this.focus = e, function (e, t, o) {\n      var n = o.options,\n          a = o.previousFocus,\n          i = o.shouldUnlockAfterFocus,\n          r = o.lock,\n          s = o.unlock,\n          c = o.saveFocus,\n          u = n.cameraDistanceRadiusScale,\n          l = n.focusAnimationDuration,\n          d = n.focusEasingFunction;\n\n      if (e) {\n        var m = [t.position.x, t.position.y, t.position.z],\n            h = P(e, 300 * n.focusDistanceRadiusScale);\n        c(e), r(), B({\n          from: m,\n          to: h,\n          animationDuration: l,\n          easingFunction: d,\n          onUpdate: function () {\n            t.position.set(m[0], m[1], m[2]);\n          },\n          onEnd: function () {\n            i && s();\n          }\n        });\n      } else if (a) {\n        var f = [t.position.x, t.position.y, t.position.z],\n            p = P(a, 300 * u);\n        r(), B({\n          from: f,\n          to: p,\n          animationDuration: l,\n          easingFunction: d,\n          onUpdate: function () {\n            t.position.set(f[0], f[1], f[2]);\n          },\n          onEnd: function () {\n            c(null), s();\n          }\n        });\n      }\n    }(this.focus, this.camera, {\n      shouldUnlockAfterFocus: o,\n      options: j(t, this.options),\n      previousFocus: this.previousFocus,\n      lock: this.lock.bind(this),\n      unlock: this.unlock.bind(this),\n      saveFocus: this.saveFocus.bind(this)\n    }));\n  }, t.updateMarkers = function (e) {\n    var t = this;\n    void 0 === e && (e = []), this.markers = e, function (e, t) {\n      var o = t.callbacks,\n          n = t.markers,\n          a = t.options,\n          i = a.markerExitAnimationDuration,\n          r = a.markerExitEasingFunction,\n          s = a.markerRadiusScaleRange,\n          l = n.map(function (e) {\n        return e.value;\n      }),\n          h = new Set(n.map(function (e) {\n        return e.id;\n      })),\n          f = s[0],\n          p = s[1],\n          g = x().domain([Math.min.apply(null, l), Math.max.apply(null, l)]).range([300 * f, 300 * p]);\n      n.forEach(function (t) {\n        var o = t.id,\n            n = g(t.value),\n            i = e.children.find(function (e) {\n          return e.marker.id === t.id;\n        });\n        i || ((i = function (e, t, o) {\n          var n,\n              a,\n              i = t.enableMarkerGlow,\n              r = t.markerEnterAnimationDuration,\n              s = t.markerEnterEasingFunction,\n              l = t.markerGlowCoefficient,\n              h = t.markerGlowPower,\n              f = t.markerGlowRadiusScale,\n              p = t.markerOffsetRadiusScale,\n              g = t.markerRenderer,\n              v = t.markerType;\n          if (g) a = g(e);else {\n            var w = e.color || \"gold\",\n                y = {\n              size: 0\n            },\n                x = {\n              size: o\n            },\n                C = new d();\n            B({\n              from: y,\n              to: x,\n              animationDuration: r,\n              easingFunction: s,\n              onUpdate: function () {\n                switch (v) {\n                  case \"bar\":\n                    C.geometry = new b(3, 3, y.size), C.material = new c({\n                      color: w\n                    });\n                    break;\n\n                  case \"dot\":\n                  default:\n                    if (C.geometry = new m(y.size, 10, 10), C.material = new u({\n                      color: w\n                    }), i) {\n                      var e = M(C.geometry, {\n                        backside: !1,\n                        coefficient: l,\n                        color: w,\n                        power: h,\n                        size: y.size * f\n                      });\n                      C.children = [], C.add(e);\n                    }\n\n                }\n              }\n            }), a = C;\n          }\n          var R = P(e.coordinates, 300 + (p ? 300 * p : \"dot\" === v ? o * (1 + f) / 2 : 0));\n          return (n = a.position).set.apply(n, R), a.lookAt(new k(0, 0, 0)), a.name = e.id, a;\n        }(t, a, n)).name = o, e.add(i)), i.marker = t;\n      }), e.children.forEach(function (t) {\n        if (!h.has(t.marker.id)) {\n          var n = t.scale.toArray();\n          B({\n            from: n,\n            to: [0, 0, 0],\n            animationDuration: i,\n            easingFunction: r,\n            onUpdate: function () {\n              var e;\n              t && (e = t.scale).set.apply(e, n);\n            },\n            onEnd: function () {\n              e.remove(t);\n            }\n          });\n        }\n\n        !function (e, t) {\n          var o = e.marker;\n          e._listeners = {}, e.on(\"click\", function (n) {\n            t.onClickMarker(o, e, n.data.originalEvent);\n          }), e.on(\"mousemove\", function (n) {\n            t.onMouseOverMarker(o, e, n.data.originalEvent);\n          }), e.on(\"mouseout\", function (n) {\n            t.onMouseOutMarker(o, e, n.data.originalEvent);\n          });\n        }(t, o);\n      });\n    }(this.markerObjects, {\n      options: this.options,\n      markers: e,\n      callbacks: {\n        onClickMarker: function (e, o, n) {\n          t.updateFocus(e.coordinates), t.callbacks.onClickMarker(e, o, n);\n        },\n        onMouseOutMarker: function (e, o, n) {\n          t.tooltip.hide(), t.callbacks.onMouseOutMarker(e, o, n);\n        },\n        onMouseOverMarker: function (e, o, n) {\n          t.options.enableMarkerTooltip && t.tooltip.show(n.clientX, n.clientY, t.options.markerTooltipRenderer(o.marker)), t.callbacks.onMouseOverMarker(e, o, n);\n        }\n      }\n    });\n  }, t.updateOptions = function (e) {\n    void 0 === e && (e = {}), this.options = j(e, T), function (e, t) {\n      var o = t.callbacks,\n          n = t.options,\n          a = t.textures,\n          i = n.globeCloudsOpacity,\n          r = o.onGlobeBackgroundTextureLoaded,\n          d = o.onGlobeCloudsTextureLoaded,\n          m = o.onGlobeTextureLoaded,\n          h = a.globeBackgroundTexture,\n          f = void 0 === h ? \"https://raw.githubusercontent.com/chrisrzhou/react-globe/main/textures/background.png\" : h,\n          p = a.globeCloudsTexture,\n          b = void 0 === p ? D : p,\n          k = a.globeTexture,\n          g = void 0 === k ? G : k,\n          v = e.clouds,\n          w = e.globe,\n          y = e.glow,\n          x = e.background;\n      n.enableGlobeGlow && ((y = M(w.geometry, {\n        backside: !0,\n        coefficient: n.globeGlowCoefficient,\n        color: n.globeGlowColor,\n        power: n.globeGlowPower,\n        size: 300 * n.globeGlowRadiusScale\n      })).name = \"glow\"), g && new s().load(g, function (e) {\n        w.material = new c({\n          map: e\n        }), w.remove(w.getObjectByName(\"glow\")), w.add(y), m();\n      }, function () {}, m), f && (new s().load(f, function (e) {\n        x.material = new u({\n          map: e,\n          side: l\n        }), r();\n      }, function () {}, r), w.remove(w.getObjectByName(\"background\")), w.add(x)), b && (new s().load(b, function (e) {\n        v.material = new c({\n          map: e,\n          transparent: !0\n        }), v.material.opacity = i, d();\n      }, function () {}, d), w.remove(w.getObjectByName(\"clouds\")), w.add(v));\n    }(this.earth, {\n      callbacks: this.callbacks,\n      options: this.options,\n      textures: this.textures\n    }), function (e, t) {\n      var o = t.ambientLightIntensity,\n          n = t.pointLightColor,\n          a = t.pointLightIntensity,\n          i = t.pointLightPositionRadiusScales,\n          r = e.ambient,\n          s = e.point,\n          c = i[0],\n          u = i[1],\n          l = i[2];\n      r.color = new h(t.ambientLightColor), r.intensity = o, s.color = new h(n), s.intensity = a, s.position.set(300 * c, 300 * u, 300 * l);\n    }(this.lights, this.options), function (e, t) {\n      var o = t.cameraAutoRotateSpeed,\n          n = t.cameraMaxDistanceRadiusScale,\n          a = t.cameraMaxPolarAngle,\n          i = t.cameraMinPolarAngle,\n          r = t.cameraRotateSpeed,\n          s = t.cameraZoomSpeed,\n          c = t.enableCameraRotate,\n          u = t.enableCameraZoom;\n      e.autoRotate = t.enableCameraAutoRotate, e.autoRotateSpeed = o, e.dampingFactor = .1, e.enableDamping = !0, e.enablePan = !1, e.enableRotate = c, e.enableZoom = u, e.maxDistance = 300 * n, e.maxPolarAngle = a, e.minDistance = 330, e.minPolarAngle = i, e.rotateSpeed = r, e.zoomSpeed = s;\n    }(this.orbitControls, this.options), this.updateFocus.bind(this, this.focus), this.updateMarkers.bind(this, this.markers);\n  }, e;\n}();\n\nexport default function (n) {\n  var a = n.animations,\n      i = void 0 === a ? [] : a,\n      r = n.focus,\n      s = n.height,\n      c = void 0 === s ? \"100%\" : s,\n      u = n.globeBackgroundTexture,\n      l = n.globeCloudsTexture,\n      d = n.globeTexture,\n      m = n.initialCameraDistanceRadiusScale,\n      h = n.initialCoordinates,\n      f = n.markers,\n      p = n.options,\n      b = void 0 === p ? T : p,\n      k = n.width,\n      g = void 0 === k ? \"100%\" : k,\n      v = n.onClickMarker,\n      w = n.onDefocus,\n      M = n.onGetGlobe,\n      x = n.onGlobeBackgroundTextureLoaded,\n      C = n.onGlobeCloudsTextureLoaded,\n      R = n.onGlobeTextureLoaded,\n      E = n.onMouseOutMarker,\n      S = n.onMouseOverMarker,\n      F = t(null),\n      D = t(null),\n      G = t(null),\n      O = t(null);\n  return o(function () {\n    var e = new U({\n      canvasElement: F.current,\n      initialCameraDistanceRadiusScale: m || b.cameraDistanceRadiusScale,\n      initialCoordinates: h,\n      textures: {\n        globeBackgroundTexture: u,\n        globeCloudsTexture: l,\n        globeTexture: d\n      },\n      tooltipElement: G.current\n    });\n    return e.animate(), O.current = e, M && M(e), function () {\n      return e.destroy();\n    };\n  }, [u, l, d, m, b.cameraDistanceRadiusScale, h, M]), o(function () {\n    var e,\n        t,\n        o,\n        n = O.current;\n    return e = D.current, t = n.resize.bind(n), (o = new y(function (e) {\n      if (e && 0 !== e.length) {\n        var o = e[0].contentRect;\n        t({\n          height: o.height,\n          width: o.width\n        });\n      }\n    })).observe(e), function () {\n      return o.unobserve(e);\n    };\n  }, []), o(function () {\n    O.current.updateCallbacks({\n      onClickMarker: v,\n      onDefocus: w,\n      onGlobeBackgroundTextureLoaded: x,\n      onGlobeCloudsTextureLoaded: C,\n      onGlobeTextureLoaded: R,\n      onMouseOutMarker: E,\n      onMouseOverMarker: S\n    });\n  }, [v, w, x, C, R, E, S]), o(function () {\n    O.current.updateOptions(b);\n  }, [b]), o(function () {\n    O.current.updateMarkers(f);\n  }, [f]), o(function () {\n    O.current.updateFocus(r);\n  }, [r]), o(function () {\n    return O.current.applyAnimations(i);\n  }, [i]), e.createElement(\"div\", {\n    ref: D,\n    style: {\n      height: c,\n      width: g\n    }\n  }, e.createElement(\"canvas\", {\n    ref: F\n  }), e.createElement(\"div\", {\n    ref: G\n  }));\n}\nexport { U as Globe, A as defaultBarMarkerOptions, S as defaultCallbacks, L as defaultDotMarkerOptions, F as defaultGlobeBackgroundTexture, D as defaultGlobeCloudsTexture, G as defaultGlobeTexture, O as defaultInitialCoordinates, T as defaultOptions, B as tween };","map":{"version":3,"sources":["../lib/defaults.js","../lib/enums.js","../lib/utils.js","../lib/tooltip.js","../lib/globe.js","../lib/lights.js","../lib/markers.js","../lib/renderer.js","../lib/camera.js","../lib/earth.js","../lib/orbit-controls.js","../lib/scene.js","../lib/focus.js","../lib/component.js"],"names":["defaultCallbacks","onClickMarker","_marker","_markerObject","_event","onDefocus","onGlobeBackgroundTextureLoaded","onGlobeCloudsTextureLoaded","onGlobeTextureLoaded","onMouseOutMarker","onMouseOverMarker","defaultGlobeBackgroundTexture","defaultGlobeCloudsTexture","defaultGlobeTexture","defaultInitialCoordinates","defaultOptions","ambientLightColor","ambientLightIntensity","cameraAutoRotateSpeed","cameraDistanceRadiusScale","cameraMaxDistanceRadiusScale","cameraMaxPolarAngle","Math","PI","cameraMinPolarAngle","cameraRotateSpeed","cameraZoomSpeed","enableCameraAutoRotate","enableCameraRotate","enableCameraZoom","enableDefocus","enableGlobeGlow","enableMarkerGlow","enableMarkerTooltip","focusAnimationDuration","focusDistanceRadiusScale","focusEasingFunction","globeCloudsOpacity","globeGlowCoefficient","globeGlowColor","globeGlowPower","globeGlowRadiusScale","markerEnterAnimationDuration","markerEnterEasingFunction","markerExitAnimationDuration","markerExitEasingFunction","markerGlowCoefficient","markerGlowPower","markerGlowRadiusScale","markerOffsetRadiusScale","markerRadiusScaleRange","markerRenderer","markerTooltipRenderer","JSON","stringify","marker","coordinates","markerType","pointLightColor","pointLightIntensity","pointLightPositionRadiusScales","defaultDotMarkerOptions","defaultBarMarkerOptions","CAMERA_FAR_RADIUS_SCALE","coordinatesToPosition","radius","phi","theta","cos","sin","merge","object","defaultObject","merged","Object","keys","forEach","value","key","undefined","element","callback","resizeObserver","ResizeObserver","entries","length","height","width","contentRect","observe","unobserve","tween","from","to","animationDuration","easingFunction","onUpdate","onEnd","delay","equation","type","TWEEN","easing","on","start","Tooltip","this","instance","tippy","animation","arrow","destroy","hide","document","body","style","cursor","position","left","top","show","clientX","clientY","content","setContent","Globe","canvasElement","initialCameraDistanceRadiusScale","initialCoordinates","textures","tooltipElement","callbacks","focus","isLocked","markers","options","previousFocus","tooltip","renderer","camera","createCamera","earth","createEarth","lights","markerObjects","orbitControls","scene","createScene","defocus","bind","updateOptions","updateCallbacks","updateMarkers","animate","render","animationFrameId","requestAnimationFrame","animateClouds","_this","clouds","rotation","axis","random","applyAnimations","animations","wait","timeouts","i","overrideOptions","shouldUnlockAfterFocus","timeout","setTimeout","_this2","unlock","updateFocus","push","clearTimeout","cancelAnimationFrame","domElement","remove","lock","enabled","autoRotate","sortObjects","update","resize","size","setSize","aspect","updateProjectionMatrix","saveFocus","focusPosition","markerObject","event","_this3","updateMarkerObjects","updateEarth","updateLights","updateOrbitControls","ambient","AmbientLight","point","PointLight","name","scaleX","scaleY","scaleZ","color","Color","intensity","set","Group","markerValues","map","markerIdSet","Set","id","radiusScaleMin","radiusScaleMax","sizeScale","scaleLinear","domain","min","apply","max","range","children","find","createMarkerObject","add","has","scale","toArray","applyCallbacks","RADIUS","mesh","Mesh","geometry","BoxGeometry","material","MeshLambertMaterial","SphereGeometry","MeshBasicMaterial","glow","createGlowMesh","backside","coefficient","power","lookAt","Vector3","_listeners","interaction","data","originalEvent","WebGLRenderer","alpha","antialias","canvas","PerspectiveCamera","far","fov","near","globe","background","globeBackgroundTexture","globeCloudsTexture","globeTexture","TextureLoader","load","getObjectByName","side","BackSide","transparent","opacity","OrbitControls","autoRotateSpeed","dampingFactor","enableDamping","enablePan","enableRotate","enableZoom","maxDistance","maxPolarAngle","minDistance","minPolarAngle","rotateSpeed","zoomSpeed","Scene","Interaction","x","y","z","onGetGlobe","canvasRef","useRef","mountRef","tooltipRef","globeRef","useEffect","current","React","ref"],"mappings":"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","sourcesContent":["import { BACKGROUND_RADIUS_SCALE, MarkerTypes } from './enums';\n\nexport const defaultCallbacks = {\n  onClickMarker: (_marker, _markerObject, _event) => {},\n  onDefocus: _previousFocus => {},\n  onGlobeBackgroundTextureLoaded: () => {},\n  onGlobeCloudsTextureLoaded: () => {},\n  onGlobeTextureLoaded: () => {},\n  onMouseOutMarker: (_marker, _markerObject, _event) => {},\n  onMouseOverMarker: (_marker, _markerObject, _event) => {},\n};\n\nexport const defaultGlobeBackgroundTexture =\n  'https://raw.githubusercontent.com/chrisrzhou/react-globe/main/textures/background.png';\n\nexport const defaultGlobeCloudsTexture =\n  'https://raw.githubusercontent.com/chrisrzhou/react-globe/main/textures/clouds.png';\n\nexport const defaultGlobeTexture =\n  'https://raw.githubusercontent.com/chrisrzhou/react-globe/main/textures/globe.jpg';\n\nexport const defaultInitialCoordinates = [1.29027, 103.851959]; // singapore!\n\nexport const defaultOptions = {\n  ambientLightColor: 'white',\n  ambientLightIntensity: 0.8,\n  cameraAutoRotateSpeed: 0.1,\n  cameraDistanceRadiusScale: 3,\n  cameraMaxDistanceRadiusScale: BACKGROUND_RADIUS_SCALE,\n  cameraMaxPolarAngle: Math.PI,\n  cameraMinPolarAngle: 0,\n  cameraRotateSpeed: 0.2,\n  cameraZoomSpeed: 1,\n  enableCameraAutoRotate: true,\n  enableCameraRotate: true,\n  enableCameraZoom: true,\n  enableDefocus: true,\n  enableGlobeGlow: true,\n  enableMarkerGlow: true,\n  enableMarkerTooltip: true,\n  focusAnimationDuration: 1000,\n  focusDistanceRadiusScale: 1.5,\n  focusEasingFunction: ['Cubic', 'Out'],\n  globeCloudsOpacity: 0.3,\n  globeGlowCoefficient: 0.1,\n  globeGlowColor: '#d1d1d1',\n  globeGlowPower: 3,\n  globeGlowRadiusScale: 0.2,\n  markerEnterAnimationDuration: 1000,\n  markerEnterEasingFunction: ['Linear', 'None'],\n  markerExitAnimationDuration: 500,\n  markerExitEasingFunction: ['Cubic', 'Out'],\n  markerGlowCoefficient: 0,\n  markerGlowPower: 3,\n  markerGlowRadiusScale: 2,\n  markerOffsetRadiusScale: 0,\n  markerRadiusScaleRange: [0.005, 0.02],\n  markerRenderer: null,\n  markerTooltipRenderer: marker => JSON.stringify(marker.coordinates),\n  markerType: MarkerTypes.DOT,\n  pointLightColor: 'white',\n  pointLightIntensity: 1,\n  pointLightPositionRadiusScales: [-2, 1, -1],\n};\n\nexport const defaultDotMarkerOptions = {\n  enableMarkerGlow: true,\n  markerRadiusScaleRange: [0.005, 0.02],\n  markerType: 'dot',\n};\n\nexport const defaultBarMarkerOptions = {\n  enableMarkerGlow: false,\n  markerRadiusScaleRange: [0.2, 0.5],\n  markerType: 'bar',\n};\n","export const CAMERA_FAR_RADIUS_SCALE = 1000;\nexport const BACKGROUND_RADIUS_SCALE = CAMERA_FAR_RADIUS_SCALE / 10;\nexport const RADIUS = 300;\n\nexport const MarkerTypes = {\n  BAR: 'bar',\n  DOT: 'dot',\n};\n","import * as TWEEN from 'es6-tween';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nexport function coordinatesToPosition(coordinates, radius) {\n  const [lat, long] = coordinates;\n  const phi = (lat * Math.PI) / 180;\n  const theta = ((long - 180) * Math.PI) / 180;\n\n  const x = -radius * Math.cos(phi) * Math.cos(theta);\n  const y = radius * Math.sin(phi);\n  const z = radius * Math.cos(phi) * Math.sin(theta);\n\n  return [x, y, z];\n}\n\nexport function merge(object, defaultObject) {\n  const merged = { ...defaultObject };\n  Object.keys(merged).forEach(key => {\n    const value = object[key];\n    merged[key] = value === undefined ? merged[key] : value;\n  });\n  return merged;\n}\n\nexport function resize(element, callback) {\n  const resizeObserver = new ResizeObserver(entries => {\n    if (!entries || entries.length === 0) {\n      return;\n    }\n    const { height, width } = entries[0].contentRect;\n    callback({ height, width });\n  });\n\n  resizeObserver.observe(element);\n\n  return () => resizeObserver.unobserve(element);\n}\n\nexport function tween({\n  from,\n  to,\n  animationDuration,\n  easingFunction,\n  onUpdate,\n  onEnd = null,\n  delay = 0,\n}) {\n  const [equation, type] = easingFunction;\n\n  new TWEEN.Tween(from)\n    .to(to, animationDuration)\n    .easing(TWEEN.Easing[equation][type])\n    .on('update', onUpdate)\n    .on('complete', onEnd)\n    .delay(delay)\n    .start();\n}\n","import tippy from 'tippy.js';\n\nconst TOOLTIP_OFFSET = 10;\n\nexport default class Tooltip {\n  constructor(element) {\n    this.element = element;\n    this.instance = tippy([element], {\n      animation: 'scale',\n      arrow: false,\n    })[0];\n  }\n\n  destroy() {\n    this.instance.destroy();\n  }\n\n  hide() {\n    document.body.style.cursor = 'inherit';\n    this.element.style.position = 'fixed';\n    this.element.style.left = '0';\n    this.element.style.top = '0';\n    this.instance.hide();\n  }\n\n  show(clientX, clientY, content) {\n    document.body.style.cursor = 'pointer';\n    this.element.style.position = 'fixed';\n    this.element.style.left = `${clientX + TOOLTIP_OFFSET}px`;\n    this.element.style.top = `${clientY + TOOLTIP_OFFSET}px`;\n    this.instance.setContent(content);\n    this.instance.show();\n  }\n}\n","import * as TWEEN from 'es6-tween';\n\nimport { createCamera } from './camera';\nimport {\n  defaultCallbacks,\n  defaultInitialCoordinates,\n  defaultOptions,\n} from './defaults';\nimport { createEarth, updateEarth } from './earth';\nimport { updateFocus } from './focus';\nimport { createLights, updateLights } from './lights';\nimport { createMarkerObjects, updateMarkerObjects } from './markers';\nimport { createOrbitControls, updateOrbitControls } from './orbit-controls';\nimport { createRenderer } from './renderer';\nimport { createScene } from './scene';\nimport Tooltip from './tooltip';\nimport { merge } from './utils';\n\nexport default class Globe {\n  constructor({\n    canvasElement,\n    initialCameraDistanceRadiusScale = defaultOptions.cameraDistanceRadiusScale,\n    initialCoordinates = defaultInitialCoordinates,\n    textures = {},\n    tooltipElement,\n  }) {\n    // state variables\n    this.callbacks = defaultCallbacks;\n    this.focus = null;\n    this.isLocked = false;\n    this.markers = [];\n    this.options = defaultOptions;\n    this.textures = textures;\n    this.previousFocus = null;\n    this.tooltip = new Tooltip(tooltipElement);\n\n    // create objects\n    this.renderer = createRenderer(canvasElement);\n    this.camera = createCamera(\n      initialCoordinates,\n      initialCameraDistanceRadiusScale,\n    );\n    this.earth = createEarth();\n    this.lights = createLights();\n    this.markerObjects = createMarkerObjects();\n    this.orbitControls = createOrbitControls(this.camera, this.renderer);\n\n    // assemble scene\n    this.scene = createScene({\n      camera: this.camera,\n      earth: this.earth,\n      lights: this.lights,\n      markerObjects: this.markerObjects,\n      renderer: this.renderer,\n      defocus: this.defocus.bind(this),\n    });\n\n    // initialize\n    this.updateOptions();\n    this.updateCallbacks();\n    this.updateMarkers();\n  }\n\n  animate() {\n    this.render();\n    this.animationFrameId = requestAnimationFrame(this.animate.bind(this));\n  }\n\n  // TODO: make this configurable\n  animateClouds() {\n    ['x', 'y', 'z'].forEach(axis => {\n      this.earth.clouds.rotation[axis] += Math.random() / 10000;\n    });\n  }\n\n  applyAnimations(animations) {\n    // const currentFocus = this.focus;\n    // const currentFocusOptions = this.options.focus;\n    let wait = 0;\n    const timeouts = [];\n    animations.forEach((animation, i) => {\n      const {\n        coordinates,\n        focusAnimationDuration,\n        focusDistanceRadiusScale,\n        focusEasingFunction,\n      } = animation;\n      const overrideOptions = {\n        focusAnimationDuration,\n        focusDistanceRadiusScale,\n        focusEasingFunction,\n      };\n      const shouldUnlockAfterFocus = i === animations.length - 1;\n\n      const timeout = setTimeout(() => {\n        this.unlock();\n        this.updateFocus(coordinates, overrideOptions, shouldUnlockAfterFocus);\n      }, wait);\n      timeouts.push(timeout);\n      wait += focusAnimationDuration;\n    });\n\n    return () => {\n      timeouts.forEach(timeout => {\n        clearTimeout(timeout);\n      });\n    };\n  }\n\n  defocus() {\n    if (!this.isLocked && this.previousFocus && this.options.enableDefocus) {\n      this.updateFocus(null);\n      this.callbacks.onDefocus(this.previousFocus);\n    }\n  }\n\n  destroy() {\n    cancelAnimationFrame(this.animationFrameId);\n    this.tooltip.destroy();\n    this.renderer.domElement.remove();\n  }\n\n  lock() {\n    this.isLocked = true;\n    this.orbitControls.enabled = false;\n    this.orbitControls.autoRotate = false;\n  }\n\n  render() {\n    this.renderer.sortObjects = false;\n    this.renderer.render(this.scene, this.camera);\n    this.orbitControls.update();\n    this.animateClouds();\n    TWEEN.update();\n  }\n\n  resize(size) {\n    const { height, width } = size;\n    this.renderer.setSize(width, height);\n    this.camera.aspect = width / height;\n    this.camera.updateProjectionMatrix();\n    this.render();\n  }\n\n  saveFocus(focusPosition) {\n    this.previousFocus = focusPosition;\n  }\n\n  unlock() {\n    this.isLocked = false;\n    this.orbitControls.enabled = true;\n    this.orbitControls.autoRotate = true;\n  }\n\n  updateCallbacks(callbacks = {}) {\n    this.callbacks = merge(callbacks, defaultCallbacks);\n  }\n\n  updateFocus(focus, overrideOptions = {}, shouldUnlockAfterFocus = true) {\n    if (!this.isLocked) {\n      this.focus = focus;\n      updateFocus(this.focus, this.camera, {\n        shouldUnlockAfterFocus,\n        options: merge(overrideOptions, this.options),\n        previousFocus: this.previousFocus,\n        lock: this.lock.bind(this),\n        unlock: this.unlock.bind(this),\n        saveFocus: this.saveFocus.bind(this),\n      });\n    }\n  }\n\n  updateMarkers(markers = []) {\n    this.markers = markers;\n    const callbacks = {\n      onClickMarker: (marker, markerObject, event) => {\n        this.updateFocus(marker.coordinates);\n        this.callbacks.onClickMarker(marker, markerObject, event);\n      },\n      onMouseOutMarker: (marker, markerObject, event) => {\n        this.tooltip.hide();\n        this.callbacks.onMouseOutMarker(marker, markerObject, event);\n      },\n      onMouseOverMarker: (marker, markerObject, event) => {\n        if (this.options.enableMarkerTooltip) {\n          this.tooltip.show(\n            event.clientX,\n            event.clientY,\n            this.options.markerTooltipRenderer(markerObject.marker),\n          );\n        }\n        this.callbacks.onMouseOverMarker(marker, markerObject, event);\n      },\n    };\n    updateMarkerObjects(this.markerObjects, {\n      options: this.options,\n      markers,\n      callbacks,\n    });\n  }\n\n  updateOptions(options = {}) {\n    this.options = merge(options, defaultOptions);\n    updateEarth(this.earth, {\n      callbacks: this.callbacks,\n      options: this.options,\n      textures: this.textures,\n    });\n    updateLights(this.lights, this.options);\n    updateOrbitControls(this.orbitControls, this.options);\n    this.updateFocus.bind(this, this.focus);\n    this.updateMarkers.bind(this, this.markers);\n  }\n}\n","import { AmbientLight, Color, PointLight } from 'three';\n\nimport { RADIUS } from './enums';\n\nexport function createLights() {\n  const ambient = new AmbientLight('white');\n  const point = new PointLight('white');\n\n  ambient.name = 'ambientLight';\n  point.name = 'pointLight';\n\n  return {\n    ambient,\n    point,\n  };\n}\n\nexport function updateLights(lights, options) {\n  const {\n    ambientLightColor,\n    ambientLightIntensity,\n    pointLightColor,\n    pointLightIntensity,\n    pointLightPositionRadiusScales,\n  } = options;\n  const { ambient, point } = lights;\n  const [scaleX, scaleY, scaleZ] = pointLightPositionRadiusScales;\n\n  ambient.color = new Color(ambientLightColor);\n  ambient.intensity = ambientLightIntensity;\n\n  point.color = new Color(pointLightColor);\n  point.intensity = pointLightIntensity;\n  point.position.set(RADIUS * scaleX, RADIUS * scaleY, RADIUS * scaleZ);\n}\n","import { scaleLinear } from 'd3-scale';\nimport {\n  BoxGeometry,\n  Group,\n  Mesh,\n  MeshBasicMaterial,\n  MeshLambertMaterial,\n  SphereGeometry,\n  Vector3,\n} from 'three';\nimport { createGlowMesh } from 'three-glow-mesh';\n\nimport { RADIUS, MarkerTypes } from './enums';\nimport { coordinatesToPosition, tween } from './utils';\n\nconst MARKER_DEFAULT_COLOR = 'gold';\nconst MARKER_SEGMENTS = 10;\nconst MARKER_UNIT_RADIUS_SCALE = 0.01;\n\nexport function createMarkerObjects() {\n  const markerObjects = new Group();\n  markerObjects.name = 'markers';\n\n  return markerObjects;\n}\n\nexport function updateMarkerObjects(\n  markerObjects,\n  { callbacks, markers, options },\n) {\n  const {\n    markerExitAnimationDuration,\n    markerExitEasingFunction,\n    markerRadiusScaleRange,\n  } = options;\n\n  const markerValues = markers.map(marker => marker.value);\n  const markerIdSet = new Set(markers.map(marker => marker.id));\n  const [radiusScaleMin, radiusScaleMax] = markerRadiusScaleRange;\n\n  const sizeScale = scaleLinear()\n    .domain([\n      Math.min.apply(null, markerValues),\n      Math.max.apply(null, markerValues),\n    ])\n    .range([RADIUS * radiusScaleMin, RADIUS * radiusScaleMax]);\n\n  markers.forEach(marker => {\n    const { id, value } = marker;\n    const size = sizeScale(value);\n\n    // create new marker objects if non-existent\n    let markerObject = markerObjects.children.find(\n      object => object.marker.id === marker.id,\n    );\n    if (!markerObject) {\n      markerObject = createMarkerObject(marker, options, size);\n      markerObject.name = id;\n      markerObjects.add(markerObject);\n    }\n    markerObject.marker = marker;\n  });\n\n  // apply marker callbacks and remove marker objects that are stale\n  markerObjects.children.forEach(markerObject => {\n    if (!markerIdSet.has(markerObject.marker.id)) {\n      const from = markerObject.scale.toArray();\n      tween({\n        from,\n        to: [0, 0, 0],\n        animationDuration: markerExitAnimationDuration,\n        easingFunction: markerExitEasingFunction,\n        onUpdate: () => {\n          if (markerObject) {\n            markerObject.scale.set(...from);\n          }\n        },\n        onEnd: () => {\n          markerObjects.remove(markerObject);\n        },\n      });\n    }\n    applyCallbacks(markerObject, callbacks);\n  });\n}\n\nfunction createMarkerObject(marker, options, size) {\n  const {\n    enableMarkerGlow,\n    markerEnterAnimationDuration,\n    markerEnterEasingFunction,\n    markerGlowCoefficient,\n    markerGlowPower,\n    markerGlowRadiusScale,\n    markerOffsetRadiusScale,\n    markerRenderer,\n    markerType,\n  } = options;\n  const unitRadius = RADIUS * MARKER_UNIT_RADIUS_SCALE;\n\n  let markerObject;\n  if (markerRenderer) {\n    markerObject = markerRenderer(marker);\n  } else {\n    const color = marker.color || MARKER_DEFAULT_COLOR;\n    const from = { size: 0 };\n    const to = { size };\n    const mesh = new Mesh();\n    tween({\n      from,\n      to,\n      animationDuration: markerEnterAnimationDuration,\n      easingFunction: markerEnterEasingFunction,\n      onUpdate: () => {\n        switch (markerType) {\n          case MarkerTypes.BAR:\n            mesh.geometry = new BoxGeometry(unitRadius, unitRadius, from.size);\n            mesh.material = new MeshLambertMaterial({ color });\n            break;\n          case MarkerTypes.DOT:\n          default:\n            mesh.geometry = new SphereGeometry(\n              from.size,\n              MARKER_SEGMENTS,\n              MARKER_SEGMENTS,\n            );\n            mesh.material = new MeshBasicMaterial({ color });\n            if (enableMarkerGlow) {\n              const glow = createGlowMesh(mesh.geometry, {\n                backside: false,\n                coefficient: markerGlowCoefficient,\n                color,\n                power: markerGlowPower,\n                size: from.size * markerGlowRadiusScale,\n              });\n              mesh.children = [];\n              mesh.add(glow);\n            }\n        }\n      },\n    });\n    markerObject = mesh;\n  }\n\n  // place markers\n  let heightOffset = 0;\n  if (markerOffsetRadiusScale) {\n    heightOffset = RADIUS * markerOffsetRadiusScale;\n  } else if (markerType === MarkerTypes.DOT) {\n    heightOffset = (size * (1 + markerGlowRadiusScale)) / 2;\n  } else {\n    heightOffset = 0;\n  }\n  const position = coordinatesToPosition(\n    marker.coordinates,\n    RADIUS + heightOffset,\n  );\n  markerObject.position.set(...position);\n  markerObject.lookAt(new Vector3(0, 0, 0));\n\n  markerObject.name = marker.id;\n\n  return markerObject;\n}\n\nfunction applyCallbacks(markerObject, callbacks) {\n  const { marker } = markerObject;\n\n  // TODO: remove hack and find formal way to remove listener\n  markerObject._listeners = {};\n  markerObject.on('click', interaction => {\n    const event = interaction.data.originalEvent;\n    callbacks.onClickMarker(marker, markerObject, event);\n  });\n  markerObject.on('mousemove', interaction => {\n    const event = interaction.data.originalEvent;\n    callbacks.onMouseOverMarker(marker, markerObject, event);\n  });\n  markerObject.on('mouseout', interaction => {\n    const event = interaction.data.originalEvent;\n    callbacks.onMouseOutMarker(marker, markerObject, event);\n  });\n}\n","import { WebGLRenderer } from 'three';\n\nexport function createRenderer(canvas) {\n  return new WebGLRenderer({\n    alpha: true,\n    antialias: true,\n    canvas,\n  });\n}\n","import { PerspectiveCamera } from 'three';\n\nimport { CAMERA_FAR_RADIUS_SCALE, RADIUS } from './enums';\nimport { coordinatesToPosition } from './utils';\n\nconst CAMERA_FAR = RADIUS * CAMERA_FAR_RADIUS_SCALE;\nconst CAMERA_FOV = 45;\nconst CAMERA_NEAR = 1;\n\nexport function createCamera(\n  initialCoordinates,\n  initialCameraDistanceRadiusScale,\n) {\n  const camera = new PerspectiveCamera();\n\n  camera.name = 'camera';\n  camera.far = CAMERA_FAR;\n  camera.fov = CAMERA_FOV;\n  camera.near = CAMERA_NEAR;\n\n  const [x, y, z] = coordinatesToPosition(\n    initialCoordinates,\n    RADIUS * initialCameraDistanceRadiusScale,\n  );\n  camera.position.set(x, y, z);\n\n  return camera;\n}\n","import {\n  BackSide,\n  Mesh,\n  MeshBasicMaterial,\n  MeshLambertMaterial,\n  SphereGeometry,\n  TextureLoader,\n} from 'three';\nimport { createGlowMesh } from 'three-glow-mesh';\n\nimport {\n  defaultGlobeBackgroundTexture,\n  defaultGlobeCloudsTexture,\n  defaultGlobeTexture,\n} from './defaults';\nimport { BACKGROUND_RADIUS_SCALE, RADIUS } from './enums';\n\nconst CLOUDS_RADIUS_OFFSET = 1;\nconst GLOBE_SEGMENTS = 50;\n\nexport function createEarth() {\n  const globe = new Mesh();\n  globe.geometry = new SphereGeometry(RADIUS, GLOBE_SEGMENTS, GLOBE_SEGMENTS);\n  globe.name = 'earth';\n\n  const clouds = new Mesh();\n  clouds.geometry = new SphereGeometry(\n    RADIUS + CLOUDS_RADIUS_OFFSET,\n    GLOBE_SEGMENTS,\n    GLOBE_SEGMENTS,\n  );\n  clouds.name = 'clouds';\n\n  const background = new Mesh();\n  background.name = 'background';\n  background.geometry = new SphereGeometry(\n    RADIUS * BACKGROUND_RADIUS_SCALE,\n    GLOBE_SEGMENTS,\n    GLOBE_SEGMENTS,\n  );\n\n  return {\n    clouds,\n    globe,\n    background,\n  };\n}\n\nexport function updateEarth(earth, { callbacks, options, textures }) {\n  const {\n    enableGlobeGlow,\n    globeCloudsOpacity,\n    globeGlowColor,\n    globeGlowCoefficient,\n    globeGlowPower,\n    globeGlowRadiusScale,\n  } = options;\n  const {\n    onGlobeBackgroundTextureLoaded,\n    onGlobeCloudsTextureLoaded,\n    onGlobeTextureLoaded,\n  } = callbacks;\n  const {\n    globeBackgroundTexture = defaultGlobeBackgroundTexture,\n    globeCloudsTexture = defaultGlobeCloudsTexture,\n    globeTexture = defaultGlobeTexture,\n  } = textures;\n  let { clouds, globe, glow, background } = earth;\n\n  if (enableGlobeGlow) {\n    glow = createGlowMesh(globe.geometry, {\n      backside: true,\n      coefficient: globeGlowCoefficient,\n      color: globeGlowColor,\n      power: globeGlowPower,\n      size: RADIUS * globeGlowRadiusScale,\n    });\n    glow.name = 'glow';\n  }\n\n  if (globeTexture) {\n    new TextureLoader().load(\n      globeTexture,\n      map => {\n        globe.material = new MeshLambertMaterial({ map });\n        globe.remove(globe.getObjectByName('glow'));\n        globe.add(glow);\n        onGlobeTextureLoaded();\n      },\n      () => {},\n      onGlobeTextureLoaded,\n    );\n  }\n\n  if (globeBackgroundTexture) {\n    new TextureLoader().load(\n      globeBackgroundTexture,\n      map => {\n        background.material = new MeshBasicMaterial({ map, side: BackSide });\n        onGlobeBackgroundTextureLoaded();\n      },\n      () => {},\n      onGlobeBackgroundTextureLoaded,\n    );\n    globe.remove(globe.getObjectByName('background'));\n    globe.add(background);\n  }\n\n  if (globeCloudsTexture) {\n    new TextureLoader().load(\n      globeCloudsTexture,\n      map => {\n        clouds.material = new MeshLambertMaterial({ map, transparent: true });\n        clouds.material.opacity = globeCloudsOpacity;\n        onGlobeCloudsTextureLoaded();\n      },\n      () => {},\n      onGlobeCloudsTextureLoaded,\n    );\n    globe.remove(globe.getObjectByName('clouds'));\n    globe.add(clouds);\n  }\n}\n","import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nimport { RADIUS } from './enums';\n\nconst ORBIT_CONTROLS_DAMPING_FACTOR = 0.1;\nconst ORBIT_CONTROLS_MIN_DISTANCE_RADIUS_SCALE = 1.1;\n\nexport function createOrbitControls(camera, renderer) {\n  return new OrbitControls(camera, renderer.domElement);\n}\n\nexport function updateOrbitControls(orbitControls, options) {\n  const {\n    cameraAutoRotateSpeed,\n    cameraMaxDistanceRadiusScale,\n    cameraMaxPolarAngle,\n    cameraMinPolarAngle,\n    cameraRotateSpeed,\n    cameraZoomSpeed,\n    enableCameraAutoRotate,\n    enableCameraRotate,\n    enableCameraZoom,\n  } = options;\n\n  orbitControls.autoRotate = enableCameraAutoRotate;\n  orbitControls.autoRotateSpeed = cameraAutoRotateSpeed;\n  orbitControls.dampingFactor = ORBIT_CONTROLS_DAMPING_FACTOR;\n  orbitControls.enableDamping = true;\n  orbitControls.enablePan = false;\n  orbitControls.enableRotate = enableCameraRotate;\n  orbitControls.enableZoom = enableCameraZoom;\n  orbitControls.maxDistance = RADIUS * cameraMaxDistanceRadiusScale;\n  orbitControls.maxPolarAngle = cameraMaxPolarAngle;\n  orbitControls.minDistance = RADIUS * ORBIT_CONTROLS_MIN_DISTANCE_RADIUS_SCALE;\n  orbitControls.minPolarAngle = cameraMinPolarAngle;\n  orbitControls.rotateSpeed = cameraRotateSpeed;\n  orbitControls.zoomSpeed = cameraZoomSpeed;\n}\n","import { Scene } from 'three';\nimport { Interaction } from 'three.interaction';\n\nexport function createScene({\n  camera,\n  earth,\n  lights,\n  markerObjects,\n  renderer,\n  defocus,\n}) {\n  const scene = new Scene();\n\n  camera.add(lights.ambient);\n  camera.add(lights.point);\n  scene.add(camera);\n  scene.add(earth.globe);\n  scene.add(markerObjects);\n\n  new Interaction(renderer, scene, camera);\n\n  // @ts-ignore\n  scene.on('click', defocus);\n\n  return scene;\n}\n","import { RADIUS } from './enums';\nimport { coordinatesToPosition, tween } from './utils';\n\nexport function updateFocus(\n  focus,\n  camera,\n  { options, previousFocus, shouldUnlockAfterFocus, lock, unlock, saveFocus },\n) {\n  const {\n    cameraDistanceRadiusScale,\n    focusAnimationDuration,\n    focusDistanceRadiusScale,\n    focusEasingFunction,\n  } = options;\n\n  if (focus) {\n    const from = [camera.position.x, camera.position.y, camera.position.z];\n    const to = coordinatesToPosition(focus, RADIUS * focusDistanceRadiusScale);\n    saveFocus(focus);\n\n    lock();\n    tween({\n      from,\n      to,\n      animationDuration: focusAnimationDuration,\n      easingFunction: focusEasingFunction,\n      onUpdate: () => {\n        const [x, y, z] = from;\n        camera.position.set(x, y, z);\n      },\n      onEnd: () => {\n        if (shouldUnlockAfterFocus) {\n          unlock();\n        }\n      },\n    });\n  } else if (previousFocus) {\n    const from = [camera.position.x, camera.position.y, camera.position.z];\n    const to = coordinatesToPosition(\n      previousFocus,\n      RADIUS * cameraDistanceRadiusScale,\n    );\n\n    lock();\n    tween({\n      from,\n      to,\n      animationDuration: focusAnimationDuration,\n      easingFunction: focusEasingFunction,\n      onUpdate: () => {\n        const [x, y, z] = from;\n        camera.position.set(x, y, z);\n      },\n      onEnd: () => {\n        saveFocus(null);\n        unlock();\n      },\n    });\n  }\n}\n","import React, { useEffect, useRef } from 'react';\n\nimport { defaultOptions } from './defaults';\nimport Globe from './globe';\nimport { resize } from './utils';\n\nexport default function ReactGlobe({\n  animations = [],\n  focus,\n  height = '100%',\n  globeBackgroundTexture,\n  globeCloudsTexture,\n  globeTexture,\n  initialCameraDistanceRadiusScale,\n  initialCoordinates,\n  markers,\n  options = defaultOptions,\n  width = '100%',\n  onClickMarker,\n  onDefocus,\n  onGetGlobe,\n  onGlobeBackgroundTextureLoaded,\n  onGlobeCloudsTextureLoaded,\n  onGlobeTextureLoaded,\n  onMouseOutMarker,\n  onMouseOverMarker,\n}) {\n  const canvasRef = useRef(null);\n  const mountRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const globeRef = useRef(null);\n\n  useEffect(() => {\n    const canvasElement = canvasRef.current;\n    const tooltipElement = tooltipRef.current;\n    const globe = new Globe({\n      canvasElement,\n      initialCameraDistanceRadiusScale:\n        initialCameraDistanceRadiusScale || options.cameraDistanceRadiusScale,\n      initialCoordinates,\n      textures: {\n        globeBackgroundTexture,\n        globeCloudsTexture,\n        globeTexture,\n      },\n      tooltipElement,\n    });\n    globe.animate();\n    globeRef.current = globe;\n    if (onGetGlobe) {\n      onGetGlobe(globe);\n    }\n    return () => globe.destroy();\n  }, [\n    globeBackgroundTexture,\n    globeCloudsTexture,\n    globeTexture,\n    initialCameraDistanceRadiusScale,\n    options.cameraDistanceRadiusScale,\n    initialCoordinates,\n    onGetGlobe,\n  ]);\n\n  // resize\n  useEffect(() => {\n    const mount = mountRef.current;\n    const globe = globeRef.current;\n    return resize(mount, globe.resize.bind(globe));\n  }, []);\n\n  // update callbacks\n  useEffect(() => {\n    const globe = globeRef.current;\n    globe.updateCallbacks({\n      onClickMarker,\n      onDefocus,\n      onGlobeBackgroundTextureLoaded,\n      onGlobeCloudsTextureLoaded,\n      onGlobeTextureLoaded,\n      onMouseOutMarker,\n      onMouseOverMarker,\n    });\n  }, [\n    onClickMarker,\n    onDefocus,\n    onGlobeBackgroundTextureLoaded,\n    onGlobeCloudsTextureLoaded,\n    onGlobeTextureLoaded,\n    onMouseOutMarker,\n    onMouseOverMarker,\n  ]);\n\n  // update options\n  useEffect(() => {\n    const globe = globeRef.current;\n    globe.updateOptions(options);\n  }, [options]);\n\n  // update markers\n  useEffect(() => {\n    const globe = globeRef.current;\n    globe.updateMarkers(markers);\n  }, [markers]);\n\n  // update focus\n  useEffect(() => {\n    const globe = globeRef.current;\n    globe.updateFocus(focus);\n  }, [focus]);\n\n  // apply animations\n  useEffect(() => {\n    const globe = globeRef.current;\n    return globe.applyAnimations(animations);\n  }, [animations]);\n\n  return (\n    <div ref={mountRef} style={{ height, width }}>\n      <canvas ref={canvasRef} />\n      <div ref={tooltipRef} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}