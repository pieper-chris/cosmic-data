{"ast":null,"code":"import React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ReactGlobe from 'react-globe';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4themes_dataviz from \"@amcharts/amcharts4/themes/dataviz\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4/geodata/worldLow\";\n\nfunction MyGlobe() {\n  return (//<!-- Styles -->\n    //<!-- Resources -->\n\n    /*<script src=\"https://cdn.amcharts.com/lib/4/core.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/maps.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/geodata/worldLow.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/themes/dataviz.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/themes/animated.js\"></script>*/\n    //<!-- Chart code -->\n    //<script>\n    am4core.ready(function () {\n      // Themes begin\n      am4core.useTheme(am4themes_dataviz);\n      am4core.useTheme(am4themes_animated); // Themes end\n\n      var chart = am4core.create(\"chartdiv\", am4maps.MapChart); // Set map definition\n      //chart.geodata = am4geodata_worldLow;\n      // Set projection\n\n      chart.projection = new am4maps.projections.Orthographic();\n      chart.panBehavior = \"rotateLongLat\";\n      chart.deltaLatitude = -20;\n      chart.padding(20, 20, 20, 20); // limits vertical rotation\n\n      chart.adapter.add(\"deltaLatitude\", function (delatLatitude) {\n        return am4core.math.fitToRange(delatLatitude, -90, 90);\n      }); // Create map polygon series\n\n      var polygonSeries = chart.series.push(new am4maps.MapPolygonSeries()); // Make map load polygon (like country names) data from GeoJSON\n\n      polygonSeries.useGeodata = true; // Configure series\n\n      var polygonTemplate = polygonSeries.mapPolygons.template;\n      polygonTemplate.tooltipText = \"{name}\";\n      polygonTemplate.fill = am4core.color(\"#47c78a\");\n      polygonTemplate.stroke = am4core.color(\"#454a58\");\n      polygonTemplate.strokeWidth = 0.5;\n      var graticuleSeries = chart.series.push(new am4maps.GraticuleSeries());\n      graticuleSeries.mapLines.template.line.stroke = am4core.color(\"#ffffff\");\n      graticuleSeries.mapLines.template.line.strokeOpacity = 0.08;\n      graticuleSeries.fitExtent = false;\n      chart.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 0.1;\n      chart.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color(\"#ffffff\"); // Create hover state and set alternative fill color\n\n      var hs = polygonTemplate.states.create(\"hover\");\n      hs.properties.fill = chart.colors.getIndex(0).brighten(-0.5);\n      let animation;\n      setTimeout(function () {\n        animation = chart.animate({\n          property: \"deltaLongitude\",\n          to: 100000\n        }, 20000000);\n      }, 3000);\n      chart.seriesContainer.events.on(\"down\", function () {\n        if (animation) {\n          animation.stop();\n        }\n      });\n    })\n  ); // end am4core.ready()\n  //</script>\n  //<!-- HTML -->\n  //<div id=\"chartdiv\"></div>)\n  //temp parenths\n}\n\nexport default MyGlobe;","map":{"version":3,"sources":["/Users/christopherpieper/Desktop/flight_count/src/globe.js"],"names":["React","useState","ReactGlobe","am4core","am4charts","am4maps","am4themes_animated","am4themes_dataviz","am4geodata_worldLow","MyGlobe","ready","useTheme","chart","create","MapChart","projection","projections","Orthographic","panBehavior","deltaLatitude","padding","adapter","add","delatLatitude","math","fitToRange","polygonSeries","series","push","MapPolygonSeries","useGeodata","polygonTemplate","mapPolygons","template","tooltipText","fill","color","stroke","strokeWidth","graticuleSeries","GraticuleSeries","mapLines","line","strokeOpacity","fitExtent","backgroundSeries","polygon","fillOpacity","hs","states","properties","colors","getIndex","brighten","animation","setTimeout","animate","property","to","seriesContainer","events","on","stop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ReactGlobe from 'react-globe';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport am4themes_dataviz from \"@amcharts/amcharts4/themes/dataviz\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4/geodata/worldLow\";\n\n\nfunction MyGlobe() {\n  return (\n    //<!-- Styles -->\n\n\n    //<!-- Resources -->\n    /*<script src=\"https://cdn.amcharts.com/lib/4/core.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/maps.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/geodata/worldLow.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/themes/dataviz.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/themes/animated.js\"></script>*/\n\n    //<!-- Chart code -->\n    //<script>\n    am4core.ready(function() {\n\n      // Themes begin\n      am4core.useTheme(am4themes_dataviz);\n      am4core.useTheme(am4themes_animated);\n      // Themes end\n\n      var chart = am4core.create(\"chartdiv\", am4maps.MapChart);\n\n      // Set map definition\n      //chart.geodata = am4geodata_worldLow;\n\n      // Set projection\n      chart.projection = new am4maps.projections.Orthographic();\n      chart.panBehavior = \"rotateLongLat\";\n      chart.deltaLatitude = -20;\n      chart.padding(20,20,20,20);\n\n      // limits vertical rotation\n      chart.adapter.add(\"deltaLatitude\", function(delatLatitude){\n        return am4core.math.fitToRange(delatLatitude, -90, 90);\n      })\n\n      // Create map polygon series\n      var polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\n\n      // Make map load polygon (like country names) data from GeoJSON\n      polygonSeries.useGeodata = true;\n\n      // Configure series\n      var polygonTemplate = polygonSeries.mapPolygons.template;\n      polygonTemplate.tooltipText = \"{name}\";\n      polygonTemplate.fill = am4core.color(\"#47c78a\");\n      polygonTemplate.stroke = am4core.color(\"#454a58\");\n      polygonTemplate.strokeWidth = 0.5;\n\n      var graticuleSeries = chart.series.push(new am4maps.GraticuleSeries());\n      graticuleSeries.mapLines.template.line.stroke = am4core.color(\"#ffffff\");\n      graticuleSeries.mapLines.template.line.strokeOpacity = 0.08;\n      graticuleSeries.fitExtent = false;\n\n\n      chart.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 0.1;\n      chart.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color(\"#ffffff\");\n\n      // Create hover state and set alternative fill color\n      var hs = polygonTemplate.states.create(\"hover\");\n      hs.properties.fill = chart.colors.getIndex(0).brighten(-0.5);\n\n      let animation;\n      setTimeout(function(){\n        animation = chart.animate({property:\"deltaLongitude\", to:100000}, 20000000);\n      }, 3000)\n\n      chart.seriesContainer.events.on(\"down\", function(){\n        if(animation){\n          animation.stop();\n        }\n      })\n\n    })) // end am4core.ready()\n  //</script>\n\n  //<!-- HTML -->\n  //<div id=\"chartdiv\"></div>)\n//temp parenths\n}\n\nexport default MyGlobe;\n"]},"metadata":{},"sourceType":"module"}